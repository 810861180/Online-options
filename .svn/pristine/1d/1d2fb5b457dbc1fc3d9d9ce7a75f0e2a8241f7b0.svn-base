<template>
  <div class="site-wrapper site-page--login">
    <div class="login-main">
      <!-- <h3 class="login-title">账号密码登录</h3> -->
      <div class="login-type">
        <label>账号密码登录</label>
        <span>|</span>
        <label>扫码登录</label>
      </div>
      <el-form :model="dataForm" :rules="dataRule" ref="dataForm" @keyup.enter.native="dataFormSubmit()" status-icon>
        <el-form-item prop="userName">
          <el-input v-model="dataForm.userName" placeholder="帐号"></el-input>
        </el-form-item>
        <el-form-item prop="password">
          <el-input v-model="dataForm.password" type="password" placeholder="密码"></el-input>
        </el-form-item>
        <el-form-item prop="kaptcha">
          <el-row :gutter="20">
            <el-col :span="14">
              <el-input v-model="dataForm.kaptcha" placeholder="验证码">
              </el-input>
            </el-col>
            <el-col :span="10" class="login-captcha">
              <img :src="kaptchaPath" @click="getKaptcha()" alt="">
            </el-col>
          </el-row>
        </el-form-item>
        <el-form-item prop="checked">
          <el-checkbox v-model="dataForm.checked">记住密码</el-checkbox>
        </el-form-item>
        <el-form-item>
          <el-button class="login-btn-submit" type="primary" @click="dataFormSubmit()">登录</el-button>
        </el-form-item>
      </el-form>
      <p>暂无账号，<a href="">注册</a></p>
    </div>
  </div>
</template>

<script>
import { getUUID, api } from '@/utils'
export default {
  data () {
    return {
      dataForm: {
        userName: '',
        password: '',
        uuid: '',
        captcha: '',
        checked: false
      },
      dataRule: {
        userName: [
          { required: true, message: '帐号不能为空', trigger: 'blur' }
        ],
        password: [
          { required: true, message: '密码不能为空', trigger: 'blur' }
        ],
        kaptcha: [
          { required: true, message: '验证码不能为空', trigger: 'blur' }
        ]
      },
      kaptchaPath: ''
    }
  },
  created () {
    this.getKaptcha()
  },
  methods: {
    // 提交表单
    dataFormSubmit () {
      this.$refs['dataForm'].validate((valid) => {
        if (valid) {
          const loading = this.$loading({
            lock: true,
            text: 'Loading',
            spinner: 'el-icon-loading',
            background: 'rgba(0, 0, 0, 0.7)'
          })
          let params = {
            username: this.dataForm.userName,
            password: this.dataForm.password,
            kaptcha: this.dataForm.kaptcha
          }
          api.login(params).then(({ data }) => {
            if (data && data.code === 200) {
              let userInfo = data.data
              loading.close()
              this.$cookie.set('token', userInfo.access_token)
              this.$store.commit('user/setUserInfo', JSON.stringify(userInfo))
              this.$cookie.set('userinfo', JSON.stringify(userInfo))
              this.$router.replace({ name: 'home' })
              // this.$store.commit('user/setName', userInfo.username)
              // this.$store.commit('user/setId', userInfo.id)
            } else {
              setTimeout(() => {
                this.getKaptcha()
                this.$message.error(data.message)
                loading.close()
              }, 500)
            }
          })
        }
      })
    },
    // 获取验证码
    getKaptcha () {
      this.dataForm.uuid = getUUID()
      console.log(this.$axios.adornUrl())
      this.kaptchaPath = this.$axios.adornUrl(api.kaptcha() + `?uuid=${this.dataForm.uuid}`)
    }
  }
}
</script>

<style lang='scss' scoped>
.site-page--login {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(38, 50, 56, 0.6);
  overflow: hidden;
  .login-main {
    position: absolute;
    top: 210px;
    right: 100px;
    padding: 40px 60px;
    width: 470px;
    // height: 350px;
    background-color: $light;
    .login-type {
      margin-bottom: 10px;
      text-align: center;
      font-weight: $bold;
      > label {
        font-size: $size16;
        &:hover,
        &:active {
          cursor: pointer;
          color: $--color-primary;
        }
      }
      > span {
        margin: 0 5px;
      }
    }
  }
}
</style>
